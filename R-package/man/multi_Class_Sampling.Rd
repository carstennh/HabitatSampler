% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outer_procedure.r
\name{multi_Class_Sampling}
\alias{multi_Class_Sampling}
\title{Perform Habitat Sampling and Probability Mapping}
\usage{
multi_Class_Sampling(in.raster, init.samples = 30, sample_type = "regular", nb_models = 200, 
nb_it = 10, buffer, reference, model = "rf", mtry = 10, last = F, seed = 3, init.seed = "sample", 
outPath, step = 1, classNames, n_classes, multiTest = 1, RGB = c(19, 20, 21) )
}
\arguments{
\item{in.raster}{satellite time series stack (rasterBrickObject) or just any type of image (*rasterObject)}

\item{init.samples}{starting number of spatial locations}

\item{sample_type}{distribution of spatial locations c("random","regular")}

\item{nb_models}{number of models (independent classifiers) to collect}

\item{nb_it}{number of iterations for model accuracy}

\item{buffer}{distance (in m) for new sample collection around initial samples (depends on pixel size)}

\item{reference}{reference spectra either SpatialPointsDataFrame (shape file) or data.frame with lines = classes, column = predictors]}

\item{model}{which machine learning classifier to use c("rf", "svm") for random forest or suppurt vector machine implementation}

\item{mtry}{number of predictor used at random forest splitting nodes (mtry << n predictors)}

\item{last}{only true for one class classifier c("FALSE", TRUE")}

\item{seed}{set seed for reproducable results}

\item{init.seed}{"sample" for new or use run1@seeds to reproduce previous steps}

\item{outPath}{output path for saving results}

\item{step}{at which step should the procedure start, e.g. use step = 2 if the first habitat is already extracted}

\item{classNames}{vector with class names in the order of reference spectra}

\item{n_classes}{total number of classes (habitat types) to be separated}

\item{multiTest}{number of test runs to compare different probability outputs}

\item{RGB}{rgb channel numbers for image plot}
}
\value{
4 files per step:
\enumerate{
\item Habitat type probability map as geocoded *.kml layer and *.tif raster files and  *.png image output
\item A Habitat object consisting of 7 slots: \cr
run1@models - list of selcted classifiers \cr
run1@ref_samples - list of SpatialPointsDataFrames with same length as run1@models holding reference labels \link{1,2} for each selected model \cr
run1@switch - vector of lenght run1@models indicating if target class equals 2, if not NA the labels need to be switched \cr
run1@layer - raster map of habitat type probability \cr
run1@mod_all - list of all classifiers (equals nb_models) \cr
run1@class_ind - vector of predictive distance measure for all habitats \cr
run1@seeds - vector of seeds for random sampling \cr
all files are saved with step number, the *.tif file is additionally saved with class names
}
}
\description{
This is the main function that performs everything: specify the input imagery, select model type, initiate sampling and model building, generates interactive maps and produce final probability raster output
}
\examples{
next steps start automatically, after command line input of:
1) number of the apropriate map if multiTest > 1
2) probability threshold for habitat type extraction 
3) decision to sample again y/n
4) adjust starting number of samples and number of models
  
for threshold evaluation an interactive map is plotted in the web browser

if convergence fails / no models can be selected / init.samples are to little / or another error occurs, restart next step with: 
in.raster = out.raster 
reference = out.reference 
step = specify next step number 
classNames = out.names

}
